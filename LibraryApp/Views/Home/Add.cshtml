@using LibraryApp.Models;
@model BookModel

@{ 
    Layout = null;
}
@{HtmlHelper.UnobtrusiveJavaScriptEnabled = true;}
<div id="addForm">
@using (Ajax.BeginForm("Add", "Home", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "addForm", InsertionMode = InsertionMode.Replace, OnComplete = "replaceTable()" }))
{

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Add new book</legend>
        <div class="editor-field">
            @Html.LabelFor(model => model.Title)
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
        <div class="editor-field" >
            @Html.LabelFor(model => model.Authors)

            <br />

            @{ int authorsQuantity = 0;}

            <br />
            <div class="form-group">
                <label>First name</label>
                @Html.Editor("Authors[" + authorsQuantity + "].FirstName")
                <label>Last name</label>
                @Html.Editor("Authors[" + authorsQuantity + "].LastName")

                <div id="authors-set">
                    @Ajax.ActionLink("Add extra author", "AddAuthor", new { number = authorsQuantity + 1 }, new AjaxOptions { HttpMethod = "GET", InsertionMode = InsertionMode.ReplaceWith, UpdateTargetId = "authors-set" })
                </div>
            </div>


        </div>
            <div class="editor-field">
                @Html.LabelFor(model => model.NumberOfPages)
                @Html.EditorFor(model => model.NumberOfPages)
                @Html.ValidationMessageFor(model => model.NumberOfPages, "", new { @class = "text-danger" })
            </div>
            <div class="editor-field">
                @Html.LabelFor(model => model.Publisher)
                @Html.EditorFor(model => model.Publisher)
                @Html.ValidationMessageFor(model => model.Publisher, "", new { @class = "text-danger" })
            </div>
            <div class="editor-field">
                @Html.LabelFor(model => model.YearOfPublication)
                @Html.EditorFor(model => model.YearOfPublication)
                @Html.ValidationMessageFor(model => model.YearOfPublication, "", new { @class = "text-danger" })
            </div>
            <div class="editor-field">
                @Html.LabelFor(model => model.Image)
                @Html.EditorFor(model => model.Image)
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
            <input type="submit" value="Save" id="buttonSave" />
</fieldset>
}
</div>