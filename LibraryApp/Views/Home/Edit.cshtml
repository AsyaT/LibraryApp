@using LibraryApp.Models;
@model BookModel

@{
    Layout = null;
}
@{HtmlHelper.UnobtrusiveJavaScriptEnabled = true;}
<tr id="book-@Model.Id">
    <td>
        <div>
            @using (Ajax.BeginForm("Edit", "Home", new AjaxOptions { HttpMethod = "POST", InsertionMode = InsertionMode.ReplaceWith, UpdateTargetId = "book-" + Model.Id }, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)

                <fieldset>
                    @Html.HiddenFor(model => model.Id)
                    <div class="form-group">
                        @Html.LabelFor(model => model.Title)
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Authors)

                        <br />
                        @for (int i = 0; i < Model.Authors.Count(); i++)
                        {
                            <div class="row">
                                <div class="form-group col-sm-4">
                                    @Html.LabelFor(m => m.Authors[i].FirstName)
                                    @Html.EditorFor(m => m.Authors[i].FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(m => m.Authors[i].FirstName, "", new { @class = "text-danger" })
                                    </div>
                                <div class="form-group col-sm-4">
                                    @Html.LabelFor(m => m.Authors[i].LastName)
                                    @Html.EditorFor(m => m.Authors[i].LastName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(m => m.Authors[i].LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                          }

                        @{
                            int orderNumber = Model.Authors.Count();
                            string uniqueControlId = Model.Id.ToString();
                        }

                        <div id="authors-set-@uniqueControlId">
                            @Ajax.ActionLink("Add extra author", "AddAuthor", new { quantity = orderNumber, controlId = uniqueControlId }, new AjaxOptions { HttpMethod = "GET", InsertionMode = InsertionMode.ReplaceWith, UpdateTargetId = "authors-set-" + uniqueControlId })
                        </div>
                        @Html.ValidationMessageFor(model => model.Authors, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.NumberOfPages)
                        @Html.EditorFor(model => model.NumberOfPages, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NumberOfPages, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Publisher)
                        @Html.EditorFor(model => model.Publisher, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Publisher, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.YearOfPublication)
                        @Html.EditorFor(model => model.YearOfPublication, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.YearOfPublication, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Image)
                        <input type="file" name="Image" class="input-files" />

                        @if (Model.Image != null)
                        {
                            <label>Current image:</label><img src="@Url.Content("~/img/" + Model.Image.FileName)" alt="" height="100" />
                        }
                     </div>
                </fieldset>
                <input type="submit" value="Update" class="btn btn-default" />
                            }
        </div>
    </td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
</tr>
